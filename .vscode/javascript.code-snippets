{
  // Place your snippets for javascriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
  // }
  "setaction": {
    "prefix": "setaction",
    "body": [
      "export const SET_${1:ACTION_NAME} = `${${2:PREFIX}}/SET_${1:ACTION_NAME}`;",
      "",
      "export const set${1/(^.)?([A-Z0-9]*)(_([A-Z0-9])?)*/$1${2:/downcase}${4}/g} = (${1/([A-Z0-9]*)(_([A-Z0-9])?)*/${1:/downcase}${3}/g}) => ({",
      "  type: SET_${1:ACTION_NAME},",
      "  ${1/([A-Z0-9]*)(_([A-Z0-9])?)*/${1:/downcase}${3}/g},",
      "});",
      "",
    ],
    "description": "Declare a redux set action."
  },
  "action": {
    "prefix": "action",
    "body": [
      "export const ${1:ACTION_NAME} = `${${2:PREFIX}}/${1:ACTION_NAME}`;",
      "",
      "export const ${1/([A-Z0-9]*)(_([A-Z0-9])?)*/${1:/downcase}${3}/g} = () => ({",
      "  type: ${1:ACTION_NAME},",
      "});",
      "",
    ],
    "description": "Declare a redux action."
  },
  "setreducer": {
    "prefix": "setreducer",
    "body": [
      "case SET_${1:ACTION_NAME}:",
      "  return { ...state, ${1/([A-Z0-9]*)(_([A-Z0-9])?)*/${1:/downcase}${3}/g}: action.${1/([A-Z0-9]*)(_([A-Z0-9])?)*/${1:/downcase}${3}/g} };",
    ],
    "description": "Declare a set action line in reducer."
  }
}
